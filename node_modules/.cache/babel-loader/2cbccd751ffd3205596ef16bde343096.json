{"ast":null,"code":"import _objectSpread from \"D:\\\\WEB\\\\React\\\\Small_Projects\\\\todo-list\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"D:\\\\WEB\\\\React\\\\Small_Projects\\\\todo-list\\\\src\\\\Containers\\\\TodoList\\\\TodoList.js\";\nimport React, { Component } from 'react';\nimport classes from './TodoList.module.css';\nimport Task from '../../Components/Task/Task';\n\nclass TodoList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      currentInputTitle: this.props.title,\n      currentInputText: \"\",\n      tasks: [// {id, taskText, checked},\n      ]\n    };\n\n    this.taskInputChangeHandler = event => {\n      let text = event.target.value;\n      this.setState({\n        currentInputText: text\n      });\n    };\n\n    this.addTask = event => {\n      let taskObj = {\n        id: new Date().getTime(),\n        taskText: this.state.currentInputText,\n        checked: false\n      };\n      let tasks = [...this.state.tasks];\n      tasks.push(taskObj);\n      this.setState({\n        tasks: tasks,\n        currentInputText: \"\"\n      });\n    };\n\n    this.removeTask = id => {\n      let newTasks = this.state.tasks.filter(el => el.id !== id);\n      this.setState(_objectSpread({}, this.state, {\n        tasks: newTasks\n      }));\n    };\n\n    this.checkboxHandler = index => {\n      let newTasks = [...this.state.tasks];\n      newTasks[index].checked = !newTasks[index].checked;\n      this.setState({\n        tasks: newTasks\n      });\n    };\n\n    this.showEditInputTitle = () => {\n      document.getElementById('todoListTitle').style.display = \"none\";\n      document.getElementById('editTodoListTitleWraper').style.display = \"block\";\n    };\n\n    this.closeEditInputTitle = () => {\n      document.getElementById('todoListTitle').style.display = \"block\";\n      document.getElementById('editTodoListTitleWraper').style.display = \"none\";\n    };\n\n    this.changeEditTitleHandler = event => {\n      let currentText = this.state.currentInputTitle;\n      currentText = event.target.value;\n      console.log(currentText);\n      this.setState({\n        currentInputTitle: currentText\n      });\n    };\n  }\n\n  render() {\n    let doneTasks = [];\n    let notDoneTasks = [];\n    doneTasks = this.state.tasks.map((el, index) => {\n      if (el.checked) {\n        return React.createElement(Task, {\n          key: el.id,\n          id: el.id,\n          index: index,\n          text: el.taskText,\n          checked: el.checked,\n          checkboxHandler: this.checkboxHandler,\n          removeTask: this.removeTask,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        });\n      } else {\n        notDoneTasks.push(React.createElement(Task, {\n          key: el.id,\n          id: el.id,\n          index: index,\n          text: el.taskText,\n          checked: el.checked,\n          checkboxHandler: this.checkboxHandler,\n          removeTask: this.removeTask,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }));\n      }\n    });\n    let todoList;\n\n    if (this.props.isShown) {\n      todoList = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        id: \"todoListTitle\",\n        className: classes.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, this.props.title), React.createElement(\"div\", {\n        id: \"editTodoListTitleWraper\",\n        className: classes.editTodoListTitleWraper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        onChange: event => this.changeEditTitleHandler(event),\n        value: this.state.currentInputTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: () => this.props.changeTitle(this.props.id, this.state.currentInputTitle),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, \"OK\"), React.createElement(\"button\", {\n        onClick: this.closeEditInputTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \"Cancel\")), React.createElement(\"div\", {\n        className: classes.editDeleteContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        onClick: this.showEditInputTitle,\n        className: classes.editTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, \"Edit\"), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, \" | \"), React.createElement(\"span\", {\n        onClick: () => this.props.showRemovePopUp(this.props.id),\n        className: classes.removeTodoList,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, \"Delete\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      })), React.createElement(\"h4\", {\n        style: {\n          marginBottom: '5px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, \"New Task...\"), React.createElement(\"input\", {\n        type: \"text\",\n        onChange: event => this.taskInputChangeHandler(event),\n        size: \"40\",\n        value: this.state.currentInputText,\n        placeholder: \"Write your next task here...\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: event => this.addTask(event),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, \"Add\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: classes.listContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: classes.listTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, \"List\"), React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, \"Should be done:\"), React.createElement(\"ul\", {\n        className: classes.list,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, notDoneTasks), React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, \"Done:\"), React.createElement(\"ul\", {\n        className: classes.list,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, doneTasks)));\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, todoList);\n  }\n\n}\n\nexport default TodoList;","map":{"version":3,"sources":["D:\\WEB\\React\\Small_Projects\\todo-list\\src\\Containers\\TodoList\\TodoList.js"],"names":["React","Component","classes","Task","TodoList","state","currentInputTitle","props","title","currentInputText","tasks","taskInputChangeHandler","event","text","target","value","setState","addTask","taskObj","id","Date","getTime","taskText","checked","push","removeTask","newTasks","filter","el","checkboxHandler","index","showEditInputTitle","document","getElementById","style","display","closeEditInputTitle","changeEditTitleHandler","currentText","console","log","render","doneTasks","notDoneTasks","map","todoList","isShown","editTodoListTitleWraper","changeTitle","editDeleteContainer","editTitle","showRemovePopUp","removeTodoList","marginBottom","listContainer","listTitle","list"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\n\r\nimport classes from './TodoList.module.css'\r\nimport Task from '../../Components/Task/Task';\r\n\r\nclass TodoList extends Component{\r\n\r\n\tstate = {\r\n\t\tcurrentInputTitle: this.props.title,\r\n\t\tcurrentInputText: \"\",\r\n      \ttasks: [\r\n            // {id, taskText, checked},\r\n          ],\r\n\t}\r\n\r\n\ttaskInputChangeHandler = (event) => {\r\n\t\tlet text = event.target.value;\r\n\t\tthis.setState({currentInputText: text,})\r\n\t}\r\n\r\n\taddTask = (event) => {\r\n\t\tlet taskObj = {\r\n\t\t\tid: new Date().getTime(),\r\n\t\t\ttaskText: this.state.currentInputText,\r\n\t\t\tchecked: false\r\n\t\t}\r\n\t\tlet tasks = [...this.state.tasks];\r\n\t\ttasks.push(taskObj);\r\n\r\n\t\tthis.setState({tasks: tasks, currentInputText: \"\"});\r\n\r\n\t}\r\n\r\n\tremoveTask = (id) => {\r\n\t\tlet newTasks = this.state.tasks.filter(el=>el.id!==id);\r\n\t\tthis.setState({\r\n\t\t\t...this.state,\r\n\t\t\ttasks: newTasks\r\n\t\t})\r\n\t}\r\n\r\n\tcheckboxHandler = (index) => {\r\n\r\n\t\tlet newTasks = [\r\n\t\t\t...this.state.tasks,\r\n\t\t]\r\n\t\t\tnewTasks[index].checked = !newTasks[index].checked;\r\n\r\n\t\tthis.setState({\r\n\t\t\ttasks: newTasks\r\n\t\t})\r\n\t\t}\r\n\r\n\t// Edit title\r\n\r\n\tshowEditInputTitle = () =>{\r\n\t\tdocument.getElementById('todoListTitle').style.display=\"none\";\r\n\t\tdocument.getElementById('editTodoListTitleWraper').style.display=\"block\";\r\n\t}\t\r\n\r\n\tcloseEditInputTitle = () =>{\r\n\t\tdocument.getElementById('todoListTitle').style.display=\"block\";\r\n\t\tdocument.getElementById('editTodoListTitleWraper').style.display=\"none\";\r\n\t}\r\n\r\n\tchangeEditTitleHandler = (event) => {\r\n\t\tlet currentText = this.state.currentInputTitle;\r\n\t\tcurrentText = event.target.value;\r\n\t\tconsole.log(currentText)\r\n\t\tthis.setState({currentInputTitle: currentText})\r\n\t}\r\n\r\n\r\n\r\n\trender(){\r\n\t\tlet doneTasks = [];\r\n\t\tlet notDoneTasks = [];\r\n\t\r\n\t\tdoneTasks = this.state.tasks.map((el, index) => {\r\n\t\t\t\t\tif(el.checked){\r\n\t\t\t\t\t\treturn(\r\n\t\t\t\t\t\t<Task key={el.id} \r\n\t\t\t\t\t\t\t  id={el.id} \r\n\t\t\t\t\t\t\t  index={index}\r\n\t\t\t\t\t\t\t  text={el.taskText} \r\n\t\t\t\t\t\t\t  checked={el.checked} \r\n\t\t\t\t\t\t\t  checkboxHandler={this.checkboxHandler}\r\n\t\t\t\t\t\t\t  removeTask = {this.removeTask}/>\r\n\t\t\t\t\t\t\t  )\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\tnotDoneTasks.push(<Task key={el.id} \r\n\t\t\t\t\t\t\t  id={el.id} \r\n\t\t\t\t\t\t\t  index={index}\r\n\t\t\t\t\t\t\t  text={el.taskText} \r\n\t\t\t\t\t\t\t  checked={el.checked} \r\n\t\t\t\t\t\t\t  checkboxHandler={this.checkboxHandler}\r\n\t\t\t\t\t\t\t  removeTask = {this.removeTask}/>)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\t  \r\n\t\t)\r\n\r\n\t\tlet todoList;\r\n\t\t\tif(this.props.isShown){\r\n\t\t\ttodoList = \r\n\t\t\t\t<div>\r\n\r\n\t\t\t\t\t<h2 id=\"todoListTitle\" className={classes.title}>{this.props.title}</h2>\r\n\r\n\t\t\t\t\t<div id=\"editTodoListTitleWraper\" className={classes.editTodoListTitleWraper}>\r\n\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\tonChange={(event)=>this.changeEditTitleHandler(event)}\r\n\t\t\t\t\t\t\tvalue={this.state.currentInputTitle}\r\n\t\t\t\t\t\t\t />\r\n\t\t\t\t\t\t<button \r\n\t\t\t\t\t\t\tonClick={()=>this.props.changeTitle(this.props.id, this.state.currentInputTitle)}>OK</button>\t\r\n\t\t\t\t\t\t<button onClick={this.closeEditInputTitle}>Cancel</button>\r\n\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t<div className={classes.editDeleteContainer}>\r\n\t\t\t\t\t\t<span onClick={this.showEditInputTitle} className={classes.editTitle}>Edit</span> \r\n\t\t\t\t\t\t<span> | </span> \r\n\t \t\t\t\t\t<span onClick={()=>this.props.showRemovePopUp(this.props.id)}\r\n\t\t\t\t\t\t\t  className={classes.removeTodoList}>Delete</span><br/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<h4 style={{marginBottom: '5px'}}>New Task...</h4>\r\n\t\t\t\t\t\t<input \r\n\t\t\t\t\t\ttype=\"text\" \r\n\t\t\t\t\t\tonChange={(event)=>this.taskInputChangeHandler(event)} \r\n\t\t\t\t\t\tsize=\"40\" value={this.state.currentInputText} \r\n\t\t\t\t\t\tplaceholder=\"Write your next task here...\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t<button onClick={(event)=>this.addTask(event)}>Add</button><br/>\r\n\r\n\t\t\t\t\t<div className={classes.listContainer}>\r\n\t\t\t\t\t\t<h3 className={classes.listTitle}>List</h3>\r\n\t\t\t\t\t\t<h4>Should be done:</h4>\r\n\t\t\t\t\t\t<ul className={classes.list}>\r\n\t\t\t\t\t\t\t{notDoneTasks}\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t<h4>Done:</h4>\r\n\t\t\t\t\t\t<ul className={classes.list}>\r\n\t\t\t\t\t\t\t{doneTasks}\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t{todoList}\r\n\t\t\t</div>\r\n\t\t\t)\r\n\t}\r\n}\r\n\r\nexport default TodoList;"]},"metadata":{},"sourceType":"module"}