{"ast":null,"code":"var _jsxFileName = \"D:\\\\WEB\\\\React\\\\Small_Projects\\\\todo-list\\\\src\\\\Containers\\\\ListMenu\\\\ListMenu.js\";\nimport React, { Component } from 'react';\nimport classes from './ListMenu.module.css';\nimport TodoList from '../TodoList/TodoList';\nimport ListTab from '../../Components/ListTab/ListTab';\n\nclass ListMenu extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      todoLists: [{\n        id: 123,\n        title: 'Grocery list',\n        path: '/grocery-list',\n        isShown: false\n      }, {\n        id: 543,\n        title: 'Project Tasks',\n        path: '/project-tasks',\n        isShown: true\n      }, {\n        id: 54523,\n        title: 'Bucket list',\n        path: '/project-tasks',\n        isShown: false\n      }],\n      selectedTodoListData: {},\n      currentNewListInputText: ''\n    };\n\n    this.showToDoList = todoListId => {\n      let newTodoLists = [...this.state.todoLists];\n      newTodoLists.find(el => el.id == todoListId).isShown = true;\n\n      for (let i = 0; i < newTodoLists.length; i++) {\n        if (newTodoLists[i].id !== todoListId) {\n          newTodoLists[i].isShown = false;\n        }\n      }\n\n      this.setState({\n        todoLists: newTodoLists\n      });\n    };\n\n    this.addNewListWrapperHandle = () => {\n      let addNewListWrapper = document.getElementById('addNewListWrapper');\n      if (addNewListWrapper.style.display == \"block\") addNewListWrapper.style.display = \"none\";else addNewListWrapper.style.display = \"block\";\n    };\n\n    this.newListChangeHandler = event => {\n      let text = event.target.value;\n      this.setState({\n        currentNewListInputText: text\n      });\n    };\n\n    this.addNewList = () => {\n      let newTodoListObj = {\n        id: new Date().getTime(),\n        title: this.state.currentNewListInputText,\n        path: '',\n        isShown: true\n      };\n      let oldTodoLists = [...this.state.todoLists];\n      oldTodoLists.push(newTodoListObj);\n      this.addNewListWrapperHandle();\n      console.log(this.state.selectedTodoListData.title);\n      this.setState({\n        todoLists: oldTodoLists,\n        currentNewListInputText: ''\n      });\n    };\n  }\n\n  render() {\n    let ToDoLists = this.state.todoLists.map(el => React.createElement(TodoList, {\n      isShown: el.isShown,\n      title: el.title,\n      id: el.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }));\n    let listTabs = this.state.todoLists.map(el => React.createElement(ListTab, {\n      isShown: el.isShown,\n      title: el.title,\n      showToDoList: () => this.showToDoList(el.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: classes.listMenu,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, listTabs, React.createElement(\"li\", {\n      onClick: this.addNewListWrapperHandle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: classes.plus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"+\"), \"New List\")), React.createElement(\"div\", {\n      style: {\n        display: 'none'\n      },\n      id: \"addNewListWrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      value: this.state.currentNewListInputText,\n      type: \"text\",\n      placeholder: \"Title\",\n      onChange: event => this.newListChangeHandler(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.addNewList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"Add\"))), ToDoLists);\n  }\n\n}\n\nexport default ListMenu;","map":{"version":3,"sources":["D:\\WEB\\React\\Small_Projects\\todo-list\\src\\Containers\\ListMenu\\ListMenu.js"],"names":["React","Component","classes","TodoList","ListTab","ListMenu","state","todoLists","id","title","path","isShown","selectedTodoListData","currentNewListInputText","showToDoList","todoListId","newTodoLists","find","el","i","length","setState","addNewListWrapperHandle","addNewListWrapper","document","getElementById","style","display","newListChangeHandler","event","text","target","value","addNewList","newTodoListObj","Date","getTime","oldTodoLists","push","console","log","render","ToDoLists","map","listTabs","listMenu","plus"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport classes from './ListMenu.module.css';\r\n\r\nimport TodoList from '../TodoList/TodoList';\r\nimport ListTab from '../../Components/ListTab/ListTab'\r\n\r\nclass ListMenu extends Component {\r\n\r\n\r\n\tstate = {\r\n\t\ttodoLists: [\r\n        {\r\n          id: 123,\r\n          title: 'Grocery list',\r\n          path: '/grocery-list',\r\n          isShown: false\r\n        },\r\n       {\r\n       \t  id: 543,\r\n          title: 'Project Tasks',\r\n          path: '/project-tasks',\r\n          isShown: true\r\n        },\r\n        {\r\n       \t  id: 54523,\r\n          title: 'Bucket list',\r\n          path: '/project-tasks',\r\n          isShown: false\r\n        },\r\n      ],\r\n      selectedTodoListData: {},\r\n      currentNewListInputText: ''\r\n\t}\r\n\r\n\tshowToDoList = (todoListId) => {\r\n\r\n\t\tlet newTodoLists = [...this.state.todoLists];\r\n\r\n\t\tnewTodoLists.find((el)=>el.id==todoListId).isShown=true;\r\n\r\n\t\tfor(let i = 0; i < newTodoLists.length; i++){\r\n\t\t\tif(newTodoLists[i].id!==todoListId){\r\n\t\t\t\tnewTodoLists[i].isShown=false;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tthis.setState({todoLists:newTodoLists})\r\n\t}\r\n\r\n\taddNewListWrapperHandle = () => {\r\n\t\tlet addNewListWrapper = document.getElementById('addNewListWrapper');\r\n\r\n\t\tif(addNewListWrapper.style.display == \"block\")\r\n\t\taddNewListWrapper.style.display=\"none\";\r\n\t\telse\r\n\t\taddNewListWrapper.style.display=\"block\";\t\r\n\t}\r\n\r\n\tnewListChangeHandler = (event) => {\r\n\t\tlet text = event.target.value;\r\n\t\tthis.setState({currentNewListInputText: text})\r\n\t}\r\n\r\n\taddNewList = () => {\r\n\t\tlet newTodoListObj = {\r\n\t\t  id: new Date().getTime(),\r\n          title: this.state.currentNewListInputText,\r\n          path: '',\r\n          isShown: true\r\n\t\t}\r\n\r\n\t\tlet oldTodoLists = [...this.state.todoLists]\r\n\t\toldTodoLists.push(newTodoListObj);\r\n\t\tthis.addNewListWrapperHandle();\r\n\t\tconsole.log(this.state.selectedTodoListData.title);\r\n\t\tthis.setState({todoLists: oldTodoLists, currentNewListInputText: ''})\r\n\t}\r\n\r\n\r\n\trender(){\r\n\t\t\r\n\t\tlet ToDoLists = this.state.todoLists.map(el=>\r\n\t\t\t<TodoList \r\n\t\t\t\tisShown={el.isShown}\r\n\t\t\t\ttitle={el.title}\r\n\t\t\t\tid={el.id}/>\r\n\t\t)\r\n\r\n\t\tlet listTabs = this.state.todoLists.map(el=>\r\n\t\t\t<ListTab \r\n\t\t\t\tisShown={el.isShown}\r\n\t\t\t\ttitle={el.title}\r\n\t\t\t\tshowToDoList={() => this.showToDoList(el.id)}/>\r\n\t\t\t)\r\n\t\t\t\t\r\n\t\treturn(\r\n\t\t\t<div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<ul className={classes.listMenu}>\r\n\t\t\t\t\t\t{listTabs}\r\n\t\t\t\t\t<li onClick={this.addNewListWrapperHandle}>\r\n\t\t\t\t\t\t<span className={classes.plus}>+</span>\r\n\t\t\t\t\t\tNew List\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t\t<div style={{display: 'none'}} id=\"addNewListWrapper\">\r\n\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\tvalue={this.state.currentNewListInputText}\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tplaceholder=\"Title\"\r\n\t\t\t\t\t\t\tonChange={(event) => this.newListChangeHandler(event)}/>\r\n\t\t\t\t\t\t<button onClick={this.addNewList}>Add</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t\t{ToDoLists}\r\n\t\t\t</div>\t\t\r\n\t\t\t)\r\n\t}\r\n}\r\n\r\nexport default ListMenu;"]},"metadata":{},"sourceType":"module"}