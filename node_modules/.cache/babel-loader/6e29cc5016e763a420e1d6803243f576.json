{"ast":null,"code":"var _jsxFileName = \"D:\\\\WEB\\\\React\\\\Small_Projects\\\\todo-list\\\\src\\\\store\\\\store.js\";\nimport React from \"react\";\nconst StoreContext = React.createContext();\n\nconst createStore = WrappedComponent => {\n  var _temp;\n\n  return _temp = class extends React.Component {\n    constructor(...args) {\n      super(...args);\n      this.state = {\n        get: key => {\n          return this.state[key];\n        },\n        set: (key, value) => {\n          const state = this.state;\n          state[key] = value;\n          this.setState(state);\n        },\n        remove: key => {\n          const state = this.state;\n          delete state[key];\n          this.setState(state);\n        }\n      };\n    }\n\n    render() {\n      return React.createElement(StoreContext.Provider, {\n        value: this.state,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(WrappedComponent, Object.assign({}, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      })));\n    }\n\n  }, _temp;\n};\n\nconst withStore = WrappedComponent => {\n  return class extends React.Component {\n    render() {\n      return React.createElement(StoreContext.Consumer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, context => React.createElement(WrappedComponent, Object.assign({\n        store: context\n      }, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      })));\n    }\n\n  };\n};\n\nexport { createStore, withStore };","map":{"version":3,"sources":["D:\\WEB\\React\\Small_Projects\\todo-list\\src\\store\\store.js"],"names":["React","StoreContext","createContext","createStore","WrappedComponent","Component","state","get","key","set","value","setState","remove","render","props","withStore","context"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,YAAY,GAAGD,KAAK,CAACE,aAAN,EAArB;;AAEA,MAAMC,WAAW,GAAGC,gBAAgB,IAAI;AAAA;;AACtC,iBAAO,cAAcJ,KAAK,CAACK,SAApB,CAA8B;AAAA;AAAA;AAAA,WAEnCC,KAFmC,GAE3B;AACNC,QAAAA,GAAG,EAAEC,GAAG,IAAI;AACV,iBAAO,KAAKF,KAAL,CAAWE,GAAX,CAAP;AACD,SAHK;AAINC,QAAAA,GAAG,EAAE,CAACD,GAAD,EAAME,KAAN,KAAgB;AACnB,gBAAMJ,KAAK,GAAG,KAAKA,KAAnB;AACAA,UAAAA,KAAK,CAACE,GAAD,CAAL,GAAaE,KAAb;AACA,eAAKC,QAAL,CAAcL,KAAd;AACD,SARK;AASNM,QAAAA,MAAM,EAAEJ,GAAG,IAAI;AACb,gBAAMF,KAAK,GAAG,KAAKA,KAAnB;AACA,iBAAOA,KAAK,CAACE,GAAD,CAAZ;AACA,eAAKG,QAAL,CAAcL,KAAd;AACD;AAbK,OAF2B;AAAA;;AAkBnCO,IAAAA,MAAM,GAAG;AACP,aACE,oBAAC,YAAD,CAAc,QAAd;AAAuB,QAAA,KAAK,EAAE,KAAKP,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,gBAAD,oBAAsB,KAAKQ,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,CADF;AAKD;;AAxBkC,GAArC;AA0BD,CA3BD;;AA4BA,MAAMC,SAAS,GAAGX,gBAAgB,IAAI;AACpC,SAAO,cAAcJ,KAAK,CAACK,SAApB,CAA8B;AACnCQ,IAAAA,MAAM,GAAG;AACP,aACE,oBAAC,YAAD,CAAc,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGG,OAAO,IAAI,oBAAC,gBAAD;AAAkB,QAAA,KAAK,EAAEA;AAAzB,SAAsC,KAAKF,KAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADd,CADF;AAKD;;AAPkC,GAArC;AASD,CAVD;;AAWA,SAASX,WAAT,EAAsBY,SAAtB","sourcesContent":["import React from \"react\";\r\n\r\nconst StoreContext = React.createContext();\r\n\r\nconst createStore = WrappedComponent => {\r\n  return class extends React.Component {\r\n  \t\r\n    state = {\r\n      get: key => {\r\n        return this.state[key];\r\n      },\r\n      set: (key, value) => {\r\n        const state = this.state;\r\n        state[key] = value;\r\n        this.setState(state);\r\n      },\r\n      remove: key => {\r\n        const state = this.state;\r\n        delete state[key];\r\n        this.setState(state);\r\n      }\r\n    };\r\n\r\n    render() {\r\n      return (\r\n        <StoreContext.Provider value={this.state}>\r\n          <WrappedComponent {...this.props} />\r\n        </StoreContext.Provider>\r\n      );\r\n    }\r\n  };\r\n};\r\nconst withStore = WrappedComponent => {\r\n  return class extends React.Component {\r\n    render() {\r\n      return (\r\n        <StoreContext.Consumer>\r\n          {context => <WrappedComponent store={context} {...this.props} />}\r\n        </StoreContext.Consumer>\r\n      );\r\n    }\r\n  };\r\n};\r\nexport { createStore, withStore };\r\n"]},"metadata":{},"sourceType":"module"}