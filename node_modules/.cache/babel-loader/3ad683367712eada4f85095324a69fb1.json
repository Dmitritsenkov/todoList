{"ast":null,"code":"import _objectSpread from \"D:\\\\WEB\\\\React\\\\Small_Projects\\\\todo-list\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"D:\\\\WEB\\\\React\\\\Small_Projects\\\\todo-list\\\\src\\\\Containers\\\\TodoList\\\\TodoList.js\";\nimport React, { Component } from 'react';\nimport classes from './TodoList.module.css';\nimport Task from '../../Components/Task/Task';\n\nclass TodoList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      listTitle: \"My List #1\",\n      currentInputText: '',\n      tasks: [// {id, taskText, checked},\n      ]\n    };\n\n    this.taskInputChangeHandler = event => {\n      let text = event.target.value;\n      this.setState(_objectSpread({}, this.state, {\n        currentInputText: text\n      }));\n    };\n\n    this.addTask = event => {\n      let taskObj = {\n        id: new Date().getTime(),\n        taskText: this.state.currentInputText,\n        checked: false\n      };\n      let tasks = [...this.state.tasks];\n      tasks.push(taskObj);\n      this.setState(_objectSpread({}, this.state, {\n        tasks: tasks,\n        currentInputText: ''\n      }));\n    };\n\n    this.removeTask = id => {\n      let newTasks = this.state.tasks.filter(el => el.id !== id);\n      this.setState(_objectSpread({}, this.state, {\n        tasks: newTasks\n      }));\n    };\n\n    this.checkboxHandler = index => {\n      let newTasks = [...this.state.tasks];\n      newTasks[index].checked = !newTasks[index].checked;\n      this.setState({\n        tasks: newTasks\n      });\n    };\n  }\n\n  render() {\n    let tasks = this.state.tasks.map((el, index) => React.createElement(Task, {\n      key: el.id,\n      id: el.id,\n      index: index,\n      text: el.taskText,\n      checked: el.checked,\n      checkboxHandler: this.checkboxHandler,\n      removeTask: this.removeTask,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, this.state.listTitle), React.createElement(\"input\", {\n      type: \"text\",\n      onChange: event => this.taskInputChangeHandler(event),\n      size: \"40\",\n      value: this.state.currentInputText,\n      placeholder: \"Write your next task here...\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: event => this.addTask(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Add\"), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Not Done:\"), React.createElement(\"ul\", {\n      className: classes.list,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, tasks), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Done:\"));\n  }\n\n}\n\nexport default TodoList;","map":{"version":3,"sources":["D:\\WEB\\React\\Small_Projects\\todo-list\\src\\Containers\\TodoList\\TodoList.js"],"names":["React","Component","classes","Task","TodoList","state","listTitle","currentInputText","tasks","taskInputChangeHandler","event","text","target","value","setState","addTask","taskObj","id","Date","getTime","taskText","checked","push","removeTask","newTasks","filter","el","checkboxHandler","index","render","map","list"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\n\r\nimport classes from './TodoList.module.css'\r\nimport Task from '../../Components/Task/Task';\r\n\r\nclass TodoList extends Component{\r\n\r\n\tstate = {\r\n\t\tlistTitle: \"My List #1\",\r\n\t\tcurrentInputText: '',\r\n\t\ttasks: [\r\n\t\t\t// {id, taskText, checked},\r\n\t\t]\r\n\t}\r\n\r\n\ttaskInputChangeHandler = (event) => {\r\n\t\tlet text = event.target.value;\r\n\t\tthis.setState({\r\n\t\t\t...this.state,\r\n\t\t\tcurrentInputText: text\r\n\t\t})\r\n\t}\r\n\r\n\taddTask = (event) => {\r\n\t\tlet taskObj = {\r\n\t\t\tid: new Date().getTime(),\r\n\t\t\ttaskText: this.state.currentInputText,\r\n\t\t\tchecked: false\r\n\t\t}\r\n\t\tlet tasks = [...this.state.tasks];\r\n\t\ttasks.push(taskObj);\r\n\t\tthis.setState({\r\n\t\t\t...this.state,\r\n\t\t\ttasks: tasks,\r\n\t\t\tcurrentInputText: ''\r\n\t\t})\r\n\t}\r\n\r\n\tremoveTask = (id) => {\r\n\t\tlet newTasks = this.state.tasks.filter(el=>el.id!==id);\r\n\t\tthis.setState({\r\n\t\t\t...this.state,\r\n\t\t\ttasks: newTasks\r\n\t\t})\r\n\t}\r\n\r\n\tcheckboxHandler = (index) => {\r\n\r\n\t\tlet newTasks = [\r\n\t\t\t...this.state.tasks,\r\n\t\t]\r\n\t\t\tnewTasks[index].checked = !newTasks[index].checked;\r\n\r\n\t\tthis.setState({\r\n\t\t\ttasks: newTasks\r\n\t\t})\r\n\t\t}\r\n\r\n\trender(){\r\n\r\n\t\tlet tasks = this.state.tasks.map((el, index)=>(\r\n\t\t\t<Task key={el.id} \r\n\t\t\t\t  id={el.id} \r\n\t\t\t\t  index={index}\r\n\t\t\t\t  text={el.taskText} \r\n\t\t\t\t  checked={el.checked} \r\n\t\t\t\t  checkboxHandler={this.checkboxHandler}\r\n\t\t\t\t  removeTask = {this.removeTask}/>\r\n\t\t))\r\n\r\n\t\treturn(\r\n\t\t\t<div>\r\n\t\t\t\t<h2>{this.state.listTitle}</h2>\r\n\t\t\t\t<input type=\"text\" onChange={(event)=>this.taskInputChangeHandler(event)} size=\"40\" value={this.state.currentInputText} placeholder=\"Write your next task here...\"/>\r\n\t\t\t\t<button onClick={(event)=>this.addTask(event)}>Add</button>\r\n\t\t\t\t<h3>Not Done:</h3>\r\n\t\t\t\t<ul className={classes.list}>\r\n\t\t\t\t\t{tasks}\r\n\t\t\t\t</ul>\r\n\t\t\t\t<h3>Done:</h3>\r\n\t\t\t</div>\r\n\t\t\t)\r\n\t}\r\n}\r\n\r\nexport default TodoList;\r\n"]},"metadata":{},"sourceType":"module"}