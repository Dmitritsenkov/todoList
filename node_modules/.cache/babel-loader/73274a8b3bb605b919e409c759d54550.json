{"ast":null,"code":"var _jsxFileName = \"D:\\\\WEB\\\\React\\\\Small_Projects\\\\todo-list\\\\src\\\\Containers\\\\ListMenu\\\\ListMenu.js\";\nimport React, { Component } from 'react';\nimport classes from './ListMenu.module.css';\nimport TodoList from '../TodoList/TodoList';\nimport ListTab from '../../Components/ListTab/ListTab';\n\nclass ListMenu extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      todoLists: [{\n        id: 123,\n        title: 'Grocery list',\n        path: '/grocery-list',\n        isShown: false\n      }, {\n        id: 543,\n        title: 'Project Tasks',\n        path: '/project-tasks',\n        isShown: true\n      }, {\n        id: 54523,\n        title: 'Bucket list',\n        path: '/project-tasks',\n        isShown: false\n      }],\n      currentListId: null,\n      currentNewListInputText: ''\n    };\n\n    this.showToDoList = todoListId => {\n      let newTodoLists = [...this.state.todoLists];\n      newTodoLists.find(el => el.id == todoListId).isShown = true;\n\n      for (let i = 0; i < newTodoLists.length; i++) {\n        if (newTodoLists[i].id !== todoListId) {\n          newTodoLists[i].isShown = false;\n        }\n      }\n\n      this.setState({\n        todoLists: newTodoLists\n      });\n    };\n\n    this.addNewListWrapperHandle = () => {\n      let addNewListWrapper = document.getElementById('addNewListWrapper');\n      if (addNewListWrapper.style.display == \"inline-block\") addNewListWrapper.style.display = \"none\";else {\n        addNewListWrapper.style.display = \"inline-block\";\n        addNewListWrapper.childNodes[0].focus();\n      }\n    };\n\n    this.newListChangeHandler = event => {\n      let text = event.target.value;\n      this.setState({\n        currentNewListInputText: text\n      });\n    };\n\n    this.addNewList = () => {\n      let newTodoListObj = {\n        id: new Date().getTime(),\n        title: this.state.currentNewListInputText,\n        path: '',\n        isShown: true\n      };\n      let oldTodoLists = [...this.state.todoLists];\n\n      for (let i = 0; i < oldTodoLists.length; i++) {\n        if (oldTodoLists[i].isShown) {\n          oldTodoLists[i].isShown = false;\n        }\n      }\n\n      oldTodoLists.push(newTodoListObj);\n      this.addNewListWrapperHandle();\n      this.setState({\n        todoLists: oldTodoLists,\n        currentNewListInputText: ''\n      });\n    };\n\n    this.showRemovePopUp = id => {\n      document.getElementById('popUpContainer').style.display = \"block\";\n      document.getElementById('cover').style.display = \"block\";\n      this.setState({\n        currentListId: id\n      });\n    };\n\n    this.hideRemovePopUp = () => {\n      document.getElementById('popUpContainer').style.display = \"none\";\n      document.getElementById('cover').style.display = \"none\";\n    };\n\n    this.removeTodoList = () => {\n      let oldTodoLists = [...this.state.todoLists];\n      let id = this.state.currentListId;\n      let index = oldTodoLists.findIndex(el => el.id == id);\n      oldTodoLists.splice(index, 1);\n\n      if (oldTodoLists.length > 0) {\n        oldTodoLists[oldTodoLists.length - 1].isShown = true;\n      }\n\n      this.hideRemovePopUp();\n      this.setState({\n        todoLists: oldTodoLists\n      });\n    };\n\n    this.changeTitle = (id, newTitle) => {\n      let oldtodoLists = [...this.state.todoLists];\n      let index = oldtodoLists.findIndex(el => el.id == id);\n      oldtodoLists[index].title = newTitle;\n      this.setState({\n        todoLists: oldtodoLists\n      });\n      document.getElementById('todoListTitle').style.display = \"block\";\n      document.getElementById('editTodoListTitleWraper').style.display = \"none\";\n    };\n  }\n\n  // _________\n  render() {\n    let popUpMessage = React.createElement(\"div\", {\n      id: \"popUpContainer\",\n      className: classes.popUpContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: classes.popUpContainer_message,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"Are you sure you want to delete this todoList?\"), React.createElement(\"button\", {\n      onClick: this.removeTodoList,\n      className: classes.yesBtn,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, \"YES\"), React.createElement(\"button\", {\n      onClick: this.hideRemovePopUp,\n      className: classes.noBtn,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"NO\"), React.createElement(\"a\", {\n      onClick: this.hideRemovePopUp,\n      href: \"#\",\n      className: classes.close,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }));\n    let ToDoLists;\n\n    if (this.state.todoLists.length > 0) {\n      ToDoLists = this.state.todoLists.map(el => React.createElement(TodoList, {\n        showRemovePopUp: this.showRemovePopUp,\n        isShown: el.isShown,\n        title: el.title,\n        id: el.id,\n        changeTitle: this.changeTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }));\n    } else if (this.state.todoLists.length == 0) {\n      ToDoLists = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: classes.addNewListMessage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, \"Add a new todoList.\"));\n    }\n\n    let listTabs = this.state.todoLists.map(el => React.createElement(ListTab, {\n      isShown: el.isShown,\n      title: el.title,\n      showToDoList: () => this.showToDoList(el.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.menuContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: classes.listMenu,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, listTabs, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"addNewListWrapper\",\n      style: {\n        display: 'none'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      style: {\n        width: '100px'\n      },\n      value: this.state.currentNewListInputText,\n      type: \"text\",\n      placeholder: \"Title\",\n      onChange: event => this.newListChangeHandler(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.addNewList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, \"OK\"))), React.createElement(\"li\", {\n      onClick: this.addNewListWrapperHandle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: classes.plus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, \"+\"), \"New List\"))), ToDoLists, popUpMessage, React.createElement(\"div\", {\n      id: \"cover\",\n      className: classes.cover,\n      onClick: this.hideRemovePopUp,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default ListMenu;","map":{"version":3,"sources":["D:\\WEB\\React\\Small_Projects\\todo-list\\src\\Containers\\ListMenu\\ListMenu.js"],"names":["React","Component","classes","TodoList","ListTab","ListMenu","state","todoLists","id","title","path","isShown","currentListId","currentNewListInputText","showToDoList","todoListId","newTodoLists","find","el","i","length","setState","addNewListWrapperHandle","addNewListWrapper","document","getElementById","style","display","childNodes","focus","newListChangeHandler","event","text","target","value","addNewList","newTodoListObj","Date","getTime","oldTodoLists","push","showRemovePopUp","hideRemovePopUp","removeTodoList","index","findIndex","splice","changeTitle","newTitle","oldtodoLists","render","popUpMessage","popUpContainer","popUpContainer_message","yesBtn","noBtn","close","ToDoLists","map","addNewListMessage","listTabs","menuContainer","listMenu","width","plus","cover"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,OAAP,MAAoB,uBAApB;AAEA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,OAAP,MAAoB,kCAApB;;AAEA,MAAMC,QAAN,SAAuBJ,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAGhCK,KAHgC,GAGxB;AACPC,MAAAA,SAAS,EAAE,CACL;AACEC,QAAAA,EAAE,EAAE,GADN;AAEEC,QAAAA,KAAK,EAAE,cAFT;AAGEC,QAAAA,IAAI,EAAE,eAHR;AAIEC,QAAAA,OAAO,EAAE;AAJX,OADK,EAON;AACGH,QAAAA,EAAE,EAAE,GADP;AAEGC,QAAAA,KAAK,EAAE,eAFV;AAGGC,QAAAA,IAAI,EAAE,gBAHT;AAIGC,QAAAA,OAAO,EAAE;AAJZ,OAPM,EAaL;AACEH,QAAAA,EAAE,EAAE,KADN;AAEEC,QAAAA,KAAK,EAAE,aAFT;AAGEC,QAAAA,IAAI,EAAE,gBAHR;AAIEC,QAAAA,OAAO,EAAE;AAJX,OAbK,CADJ;AAqBHC,MAAAA,aAAa,EAAE,IArBZ;AAsBHC,MAAAA,uBAAuB,EAAE;AAtBtB,KAHwB;;AAAA,SA4BhCC,YA5BgC,GA4BhBC,UAAD,IAAgB;AAE9B,UAAIC,YAAY,GAAG,CAAC,GAAG,KAAKV,KAAL,CAAWC,SAAf,CAAnB;AAEAS,MAAAA,YAAY,CAACC,IAAb,CAAmBC,EAAD,IAAMA,EAAE,CAACV,EAAH,IAAOO,UAA/B,EAA2CJ,OAA3C,GAAmD,IAAnD;;AAEA,WAAI,IAAIQ,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGH,YAAY,CAACI,MAAhC,EAAwCD,CAAC,EAAzC,EAA4C;AAC3C,YAAGH,YAAY,CAACG,CAAD,CAAZ,CAAgBX,EAAhB,KAAqBO,UAAxB,EAAmC;AAClCC,UAAAA,YAAY,CAACG,CAAD,CAAZ,CAAgBR,OAAhB,GAAwB,KAAxB;AACA;AACD;;AAED,WAAKU,QAAL,CAAc;AAACd,QAAAA,SAAS,EAACS;AAAX,OAAd;AACA,KAzC+B;;AAAA,SA2ChCM,uBA3CgC,GA2CN,MAAM;AAC/B,UAAIC,iBAAiB,GAAGC,QAAQ,CAACC,cAAT,CAAwB,mBAAxB,CAAxB;AAEA,UAAGF,iBAAiB,CAACG,KAAlB,CAAwBC,OAAxB,IAAmC,cAAtC,EACCJ,iBAAiB,CAACG,KAAlB,CAAwBC,OAAxB,GAAgC,MAAhC,CADD,KAII;AACHJ,QAAAA,iBAAiB,CAACG,KAAlB,CAAwBC,OAAxB,GAAgC,cAAhC;AACAJ,QAAAA,iBAAiB,CAACK,UAAlB,CAA6B,CAA7B,EAAgCC,KAAhC;AACA;AACD,KAtD+B;;AAAA,SAwDhCC,oBAxDgC,GAwDRC,KAAD,IAAW;AACjC,UAAIC,IAAI,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAAxB;AACA,WAAKb,QAAL,CAAc;AAACR,QAAAA,uBAAuB,EAAEmB;AAA1B,OAAd;AACA,KA3D+B;;AAAA,SA6DhCG,UA7DgC,GA6DnB,MAAM;AAClB,UAAIC,cAAc,GAAG;AACnB5B,QAAAA,EAAE,EAAE,IAAI6B,IAAJ,GAAWC,OAAX,EADe;AAEb7B,QAAAA,KAAK,EAAE,KAAKH,KAAL,CAAWO,uBAFL;AAGbH,QAAAA,IAAI,EAAE,EAHO;AAIbC,QAAAA,OAAO,EAAE;AAJI,OAArB;AAOA,UAAI4B,YAAY,GAAG,CAAC,GAAG,KAAKjC,KAAL,CAAWC,SAAf,CAAnB;;AAEA,WAAI,IAAIY,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGoB,YAAY,CAACnB,MAAhC,EAAwCD,CAAC,EAAzC,EAA4C;AAC3C,YAAGoB,YAAY,CAACpB,CAAD,CAAZ,CAAgBR,OAAnB,EAA2B;AAC1B4B,UAAAA,YAAY,CAACpB,CAAD,CAAZ,CAAgBR,OAAhB,GAAwB,KAAxB;AACA;AACD;;AAED4B,MAAAA,YAAY,CAACC,IAAb,CAAkBJ,cAAlB;AACA,WAAKd,uBAAL;AACA,WAAKD,QAAL,CAAc;AAACd,QAAAA,SAAS,EAAEgC,YAAZ;AAA0B1B,QAAAA,uBAAuB,EAAE;AAAnD,OAAd;AACA,KAhF+B;;AAAA,SAkFhC4B,eAlFgC,GAkFbjC,EAAD,IAAQ;AACzBgB,MAAAA,QAAQ,CAACC,cAAT,CAAwB,gBAAxB,EAA0CC,KAA1C,CAAgDC,OAAhD,GAAwD,OAAxD;AACAH,MAAAA,QAAQ,CAACC,cAAT,CAAwB,OAAxB,EAAiCC,KAAjC,CAAuCC,OAAvC,GAA+C,OAA/C;AACA,WAAKN,QAAL,CAAc;AAACT,QAAAA,aAAa,EAAEJ;AAAhB,OAAd;AACA,KAtF+B;;AAAA,SAwFhCkC,eAxFgC,GAwFd,MAAM;AACvBlB,MAAAA,QAAQ,CAACC,cAAT,CAAwB,gBAAxB,EAA0CC,KAA1C,CAAgDC,OAAhD,GAAwD,MAAxD;AACAH,MAAAA,QAAQ,CAACC,cAAT,CAAwB,OAAxB,EAAiCC,KAAjC,CAAuCC,OAAvC,GAA+C,MAA/C;AACA,KA3F+B;;AAAA,SA8FhCgB,cA9FgC,GA8Ff,MAAM;AAEtB,UAAIJ,YAAY,GAAG,CAAC,GAAG,KAAKjC,KAAL,CAAWC,SAAf,CAAnB;AACA,UAAIC,EAAE,GAAG,KAAKF,KAAL,CAAWM,aAApB;AACA,UAAIgC,KAAK,GAAGL,YAAY,CAACM,SAAb,CAAuB3B,EAAE,IAAEA,EAAE,CAACV,EAAH,IAAOA,EAAlC,CAAZ;AACA+B,MAAAA,YAAY,CAACO,MAAb,CAAoBF,KAApB,EAA2B,CAA3B;;AAEA,UAAGL,YAAY,CAACnB,MAAb,GAAoB,CAAvB,EAAyB;AACzBmB,QAAAA,YAAY,CAACA,YAAY,CAACnB,MAAb,GAAoB,CAArB,CAAZ,CAAoCT,OAApC,GAA4C,IAA5C;AACC;;AAED,WAAK+B,eAAL;AACA,WAAKrB,QAAL,CAAc;AAACd,QAAAA,SAAS,EAAEgC;AAAZ,OAAd;AACA,KA3G+B;;AAAA,SA+GhCQ,WA/GgC,GA+GlB,CAACvC,EAAD,EAAKwC,QAAL,KAAkB;AAC/B,UAAIC,YAAY,GAAG,CAAC,GAAG,KAAK3C,KAAL,CAAWC,SAAf,CAAnB;AACA,UAAIqC,KAAK,GAAGK,YAAY,CAACJ,SAAb,CAAuB3B,EAAE,IAAEA,EAAE,CAACV,EAAH,IAAOA,EAAlC,CAAZ;AACAyC,MAAAA,YAAY,CAACL,KAAD,CAAZ,CAAoBnC,KAApB,GAA4BuC,QAA5B;AACA,WAAK3B,QAAL,CAAc;AAACd,QAAAA,SAAS,EAAE0C;AAAZ,OAAd;AACAzB,MAAAA,QAAQ,CAACC,cAAT,CAAwB,eAAxB,EAAyCC,KAAzC,CAA+CC,OAA/C,GAAuD,OAAvD;AACAH,MAAAA,QAAQ,CAACC,cAAT,CAAwB,yBAAxB,EAAmDC,KAAnD,CAAyDC,OAAzD,GAAiE,MAAjE;AACA,KAtH+B;AAAA;;AA0HhC;AAGAuB,EAAAA,MAAM,GAAE;AAGP,QAAIC,YAAY,GACf;AAAK,MAAA,EAAE,EAAC,gBAAR;AAAyB,MAAA,SAAS,EAAEjD,OAAO,CAACkD,cAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAG,MAAA,SAAS,EAAElD,OAAO,CAACmD,sBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wDADD,EAEC;AAAQ,MAAA,OAAO,EAAE,KAAKV,cAAtB;AAAsC,MAAA,SAAS,EAAEzC,OAAO,CAACoD,MAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFD,EAGC;AAAQ,MAAA,OAAO,EAAE,KAAKZ,eAAtB;AAAuC,MAAA,SAAS,EAAExC,OAAO,CAACqD,KAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHD,EAIC;AAAG,MAAA,OAAO,EAAE,KAAKb,eAAjB;AAAkC,MAAA,IAAI,EAAC,GAAvC;AAA2C,MAAA,SAAS,EAAExC,OAAO,CAACsD,KAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJD,CADD;AASA,QAAIC,SAAJ;;AAEA,QAAG,KAAKnD,KAAL,CAAWC,SAAX,CAAqBa,MAArB,GAA4B,CAA/B,EAAiC;AAChCqC,MAAAA,SAAS,GAAG,KAAKnD,KAAL,CAAWC,SAAX,CAAqBmD,GAArB,CAAyBxC,EAAE,IACtC,oBAAC,QAAD;AACC,QAAA,eAAe,EAAE,KAAKuB,eADvB;AAEC,QAAA,OAAO,EAAEvB,EAAE,CAACP,OAFb;AAGC,QAAA,KAAK,EAAEO,EAAE,CAACT,KAHX;AAIC,QAAA,EAAE,EAAES,EAAE,CAACV,EAJR;AAKC,QAAA,WAAW,EAAE,KAAKuC,WALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADW,CAAZ;AAQA,KATD,MAUK,IAAG,KAAKzC,KAAL,CAAWC,SAAX,CAAqBa,MAArB,IAA6B,CAAhC,EAAkC;AACtCqC,MAAAA,SAAS,GACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAI,QAAA,SAAS,EAAEvD,OAAO,CAACyD,iBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADD,CADA;AAIA;;AAGD,QAAIC,QAAQ,GAAG,KAAKtD,KAAL,CAAWC,SAAX,CAAqBmD,GAArB,CAAyBxC,EAAE,IACzC,oBAAC,OAAD;AACC,MAAA,OAAO,EAAEA,EAAE,CAACP,OADb;AAEC,MAAA,KAAK,EAAEO,EAAE,CAACT,KAFX;AAGC,MAAA,YAAY,EAAE,MAAM,KAAKK,YAAL,CAAkBI,EAAE,CAACV,EAArB,CAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADc,CAAf;AAOA,WACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAK,MAAA,SAAS,EAAEN,OAAO,CAAC2D,aAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAI,MAAA,SAAS,EAAE3D,OAAO,CAAC4D,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACEF,QADF,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAK,MAAA,EAAE,EAAC,mBAAR;AAA4B,MAAA,KAAK,EAAE;AAACjC,QAAAA,OAAO,EAAE;AAAV,OAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AACC,MAAA,KAAK,EAAE;AAACoC,QAAAA,KAAK,EAAE;AAAR,OADR;AAEC,MAAA,KAAK,EAAE,KAAKzD,KAAL,CAAWO,uBAFnB;AAGC,MAAA,IAAI,EAAC,MAHN;AAIC,MAAA,WAAW,EAAC,OAJb;AAKC,MAAA,QAAQ,EAAGkB,KAAD,IAAW,KAAKD,oBAAL,CAA0BC,KAA1B,CALtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,EAOC;AAAQ,MAAA,OAAO,EAAE,KAAKI,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPD,CADD,CAFD,EAaA;AAAI,MAAA,OAAO,EAAE,KAAKb,uBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAM,MAAA,SAAS,EAAEpB,OAAO,CAAC8D,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADD,aAbA,CADD,CADD,EAqBGP,SArBH,EAsBGN,YAtBH,EAwBE;AACA,MAAA,EAAE,EAAC,OADH;AAEA,MAAA,SAAS,EAAEjD,OAAO,CAAC+D,KAFnB;AAGA,MAAA,OAAO,EAAE,KAAKvB,eAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAxBF,CADD;AA+BA;;AAnM+B;;AAsMjC,eAAerC,QAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport classes from './ListMenu.module.css';\r\n\r\nimport TodoList from '../TodoList/TodoList';\r\nimport ListTab from '../../Components/ListTab/ListTab'\r\n\r\nclass ListMenu extends Component {\r\n\r\n\r\n\tstate = {\r\n\t\ttodoLists: [\r\n        {\r\n          id: 123,\r\n          title: 'Grocery list',\r\n          path: '/grocery-list',\r\n          isShown: false\r\n        },\r\n       {\r\n       \t  id: 543,\r\n          title: 'Project Tasks',\r\n          path: '/project-tasks',\r\n          isShown: true\r\n        },\r\n        {\r\n       \t  id: 54523,\r\n          title: 'Bucket list',\r\n          path: '/project-tasks',\r\n          isShown: false\r\n        },\r\n      ],\r\n      currentListId: null,\r\n      currentNewListInputText: ''\r\n\t}\r\n\r\n\tshowToDoList = (todoListId) => {\r\n\r\n\t\tlet newTodoLists = [...this.state.todoLists];\r\n\r\n\t\tnewTodoLists.find((el)=>el.id==todoListId).isShown=true;\r\n\r\n\t\tfor(let i = 0; i < newTodoLists.length; i++){\r\n\t\t\tif(newTodoLists[i].id!==todoListId){\r\n\t\t\t\tnewTodoLists[i].isShown=false;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tthis.setState({todoLists:newTodoLists})\r\n\t}\r\n\r\n\taddNewListWrapperHandle = () => {\r\n\t\tlet addNewListWrapper = document.getElementById('addNewListWrapper');\r\n\r\n\t\tif(addNewListWrapper.style.display == \"inline-block\")\r\n\t\t\taddNewListWrapper.style.display=\"none\";\r\n\t\t\r\n\r\n\t\telse{\r\n\t\t\taddNewListWrapper.style.display=\"inline-block\";\r\n\t\t\taddNewListWrapper.childNodes[0].focus();\r\n\t\t}\r\n\t}\r\n\r\n\tnewListChangeHandler = (event) => {\r\n\t\tlet text = event.target.value;\r\n\t\tthis.setState({currentNewListInputText: text})\r\n\t}\r\n\r\n\taddNewList = () => {\r\n\t\tlet newTodoListObj = {\r\n\t\t  id: new Date().getTime(),\r\n          title: this.state.currentNewListInputText,\r\n          path: '',\r\n          isShown: true\r\n\t\t}\r\n\r\n\t\tlet oldTodoLists = [...this.state.todoLists]\r\n\r\n\t\tfor(let i = 0; i < oldTodoLists.length; i++){\r\n\t\t\tif(oldTodoLists[i].isShown){\r\n\t\t\t\toldTodoLists[i].isShown=false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\toldTodoLists.push(newTodoListObj);\r\n\t\tthis.addNewListWrapperHandle();\r\n\t\tthis.setState({todoLists: oldTodoLists, currentNewListInputText: ''})\r\n\t}\r\n\r\n\tshowRemovePopUp = (id) => {\r\n\t\tdocument.getElementById('popUpContainer').style.display=\"block\";\r\n\t\tdocument.getElementById('cover').style.display=\"block\";\r\n\t\tthis.setState({currentListId: id});\r\n\t}\r\n\r\n\thideRemovePopUp = () => {\r\n\t\tdocument.getElementById('popUpContainer').style.display=\"none\";\r\n\t\tdocument.getElementById('cover').style.display=\"none\";\r\n\t}\r\n\r\n\r\n\tremoveTodoList = () => {\r\n\r\n\t\tlet oldTodoLists = [...this.state.todoLists];\r\n\t\tlet id = this.state.currentListId;\r\n\t\tlet index = oldTodoLists.findIndex(el=>el.id==id);\r\n\t\toldTodoLists.splice(index, 1);\r\n\r\n\t\tif(oldTodoLists.length>0){\r\n\t\toldTodoLists[oldTodoLists.length-1].isShown=true;\r\n\t\t}\r\n\r\n\t\tthis.hideRemovePopUp();\r\n\t\tthis.setState({todoLists: oldTodoLists});\r\n\t}\r\n\r\n\t// Edit todoList title\r\n\r\n\tchangeTitle = (id, newTitle) => {\r\n\t\tlet oldtodoLists = [...this.state.todoLists];\r\n\t\tlet index = oldtodoLists.findIndex(el=>el.id==id);\r\n\t\toldtodoLists[index].title = newTitle;\r\n\t\tthis.setState({todoLists: oldtodoLists});\r\n\t\tdocument.getElementById('todoListTitle').style.display=\"block\";\r\n\t\tdocument.getElementById('editTodoListTitleWraper').style.display=\"none\";\r\n\t}\r\n\r\n\t\r\n\r\n\t// _________\r\n\r\n\r\n\trender(){\r\n\r\n\r\n\t\tlet popUpMessage = (\r\n\t\t\t<div id=\"popUpContainer\" className={classes.popUpContainer}>\r\n\t\t\t\t<p className={classes.popUpContainer_message}>Are you sure you want to delete this todoList?</p>\r\n\t\t\t\t<button onClick={this.removeTodoList} className={classes.yesBtn}>YES</button>\r\n\t\t\t\t<button onClick={this.hideRemovePopUp} className={classes.noBtn}>NO</button>\r\n\t\t\t\t<a onClick={this.hideRemovePopUp} href=\"#\" className={classes.close}/>\r\n\t\t\t</div>\r\n\t\t)\r\n\r\n\t\tlet ToDoLists;\r\n\r\n\t\tif(this.state.todoLists.length>0){\r\n\t\t\tToDoLists = this.state.todoLists.map(el=>\r\n\t\t\t\t<TodoList \r\n\t\t\t\t\tshowRemovePopUp={this.showRemovePopUp}\r\n\t\t\t\t\tisShown={el.isShown}\r\n\t\t\t\t\ttitle={el.title}\r\n\t\t\t\t\tid={el.id}\r\n\t\t\t\t\tchangeTitle={this.changeTitle}/>\r\n\t\t\t)\r\n\t\t}\t\r\n\t\telse if(this.state.todoLists.length==0){\r\n\t\t\tToDoLists = \r\n\t\t\t<div>\r\n\t\t\t\t<h2 className={classes.addNewListMessage}>Add a new todoList.</h2>\r\n\t\t\t</div>\r\n\t\t}\r\n\r\n\r\n\t\tlet listTabs = this.state.todoLists.map(el=>\r\n\t\t\t<ListTab \r\n\t\t\t\tisShown={el.isShown}\r\n\t\t\t\ttitle={el.title}\r\n\t\t\t\tshowToDoList={() => this.showToDoList(el.id)}/>\r\n\t\t\t)\r\n\t\t\t\t\r\n\t\treturn(\r\n\t\t\t<div>\r\n\t\t\t\t<div className={classes.menuContainer}>\r\n\t\t\t\t\t<ul className={classes.listMenu}>\r\n\t\t\t\t\t\t{listTabs}\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<div id=\"addNewListWrapper\" style={{display: 'none'}}>\r\n\t\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\t\tstyle={{width: '100px'}}\r\n\t\t\t\t\t\t\t\tvalue={this.state.currentNewListInputText}\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"Title\"\r\n\t\t\t\t\t\t\t\tonChange={(event) => this.newListChangeHandler(event)}/>\r\n\t\t\t\t\t\t\t\t<button onClick={this.addNewList}>OK</button>\r\n\t\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t</li>\t\r\n\t\t\t\t\t<li onClick={this.addNewListWrapperHandle}>\r\n\t\t\t\t\t\t<span className={classes.plus}>+</span>\r\n\t\t\t\t\t\tNew List\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</div>\r\n\t\t\t\t\t{ToDoLists}\r\n\t\t\t\t\t{popUpMessage}\r\n\r\n\t\t\t\t\t<div \r\n\t\t\t\t\tid=\"cover\" \r\n\t\t\t\t\tclassName={classes.cover}\r\n\t\t\t\t\tonClick={this.hideRemovePopUp}></div>\r\n\t\t\t</div>\t\t\r\n\t\t\t)\r\n\t}\r\n}\r\n\r\nexport default ListMenu;"]},"metadata":{},"sourceType":"module"}